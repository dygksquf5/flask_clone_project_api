"""empty message

Revision ID: 6073b320843d
Revises: e024341f7c00
Create Date: 2021-03-02 10:41:01.313348

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6073b320843d'
down_revision = 'e024341f7c00'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('board', sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'board', ['uuid'])
    op.drop_constraint('board_user_id_fkey', 'board', type_='foreignkey')
    op.drop_constraint('board_store_id_fkey', 'board', type_='foreignkey')
    op.create_foreign_key(None, 'board', 'store', ['store_id'], ['uuid'], ondelete='CASCADE')
    op.create_foreign_key(None, 'board', 'users', ['user_id'], ['uuid'], ondelete='CASCADE')
    op.drop_column('board', 'id')
    op.drop_constraint('board_like_board_id_fkey', 'board_like', type_='foreignkey')
    op.drop_constraint('board_like_users_id_fkey', 'board_like', type_='foreignkey')
    op.create_foreign_key(None, 'board_like', 'users', ['users_id'], ['uuid'], ondelete='CASCADE')
    op.create_foreign_key(None, 'board_like', 'board', ['board_id'], ['uuid'], ondelete='CASCADE')
    op.add_column('category', sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'category', ['uuid'])
    op.drop_constraint('category_store_id_fkey', 'category', type_='foreignkey')
    op.create_foreign_key(None, 'category', 'store', ['store_id'], ['uuid'], ondelete='CASCADE')
    op.drop_column('category', 'id')
    op.add_column('comment', sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'comment', ['uuid'])
    op.drop_constraint('comment_user_id_fkey', 'comment', type_='foreignkey')
    op.drop_constraint('comment_board_id_fkey', 'comment', type_='foreignkey')
    op.create_foreign_key(None, 'comment', 'users', ['user_id'], ['uuid'], ondelete='CASCADE')
    op.create_foreign_key(None, 'comment', 'board', ['board_id'], ['uuid'], ondelete='CASCADE')
    op.drop_column('comment', 'id')
    op.drop_constraint('main_order_user_id_fkey', 'main_order', type_='foreignkey')
    op.drop_constraint('main_order_store_id_fkey', 'main_order', type_='foreignkey')
    op.create_foreign_key(None, 'main_order', 'store', ['store_id'], ['uuid'], ondelete='CASCADE')
    op.create_foreign_key(None, 'main_order', 'users', ['user_id'], ['uuid'], ondelete='CASCADE')
    op.drop_constraint('menu_option_table_menu_id_fkey', 'menu_option_table', type_='foreignkey')
    op.drop_constraint('menu_option_table_option_id_fkey', 'menu_option_table', type_='foreignkey')
    op.create_foreign_key(None, 'menu_option_table', 'option', ['option_id'], ['uuid'], ondelete='CASCADE')
    op.create_foreign_key(None, 'menu_option_table', 'menus', ['menu_id'], ['uuid'], ondelete='CASCADE')
    op.add_column('menus', sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'menus', ['uuid'])
    op.drop_constraint('menus_store_id_fkey', 'menus', type_='foreignkey')
    op.drop_constraint('menus_category_id_fkey', 'menus', type_='foreignkey')
    op.create_foreign_key(None, 'menus', 'category', ['category_id'], ['uuid'], ondelete='CASCADE')
    op.create_foreign_key(None, 'menus', 'store', ['store_id'], ['uuid'], ondelete='CASCADE')
    op.drop_column('menus', 'id')
    op.add_column('option', sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'option', ['uuid'])
    op.drop_constraint('option_store_id_fkey', 'option', type_='foreignkey')
    op.create_foreign_key(None, 'option', 'store', ['store_id'], ['uuid'], ondelete='CASCADE')
    op.drop_column('option', 'id')
    op.drop_constraint('order_detail_option_id_fkey', 'order_detail', type_='foreignkey')
    op.drop_constraint('order_detail_menu_id_fkey', 'order_detail', type_='foreignkey')
    op.create_foreign_key(None, 'order_detail', 'menus', ['menu_id'], ['uuid'])
    op.create_foreign_key(None, 'order_detail', 'option', ['option_id'], ['uuid'])
    op.add_column('store', sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'store', ['uuid'])
    op.drop_column('store', 'id')
    op.add_column('users', sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'users', ['uuid'])
    op.drop_column('users', 'id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'uuid')
    op.add_column('store', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('store_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'store', type_='unique')
    op.drop_column('store', 'uuid')
    op.drop_constraint(None, 'order_detail', type_='foreignkey')
    op.drop_constraint(None, 'order_detail', type_='foreignkey')
    op.create_foreign_key('order_detail_menu_id_fkey', 'order_detail', 'menus', ['menu_id'], ['id'])
    op.create_foreign_key('order_detail_option_id_fkey', 'order_detail', 'option', ['option_id'], ['id'])
    op.add_column('option', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'option', type_='foreignkey')
    op.create_foreign_key('option_store_id_fkey', 'option', 'store', ['store_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'option', type_='unique')
    op.drop_column('option', 'uuid')
    op.add_column('menus', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'menus', type_='foreignkey')
    op.drop_constraint(None, 'menus', type_='foreignkey')
    op.create_foreign_key('menus_category_id_fkey', 'menus', 'category', ['category_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('menus_store_id_fkey', 'menus', 'store', ['store_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'menus', type_='unique')
    op.drop_column('menus', 'uuid')
    op.drop_constraint(None, 'menu_option_table', type_='foreignkey')
    op.drop_constraint(None, 'menu_option_table', type_='foreignkey')
    op.create_foreign_key('menu_option_table_option_id_fkey', 'menu_option_table', 'option', ['option_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('menu_option_table_menu_id_fkey', 'menu_option_table', 'menus', ['menu_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'main_order', type_='foreignkey')
    op.drop_constraint(None, 'main_order', type_='foreignkey')
    op.create_foreign_key('main_order_store_id_fkey', 'main_order', 'store', ['store_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('main_order_user_id_fkey', 'main_order', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('comment', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.create_foreign_key('comment_board_id_fkey', 'comment', 'board', ['board_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('comment_user_id_fkey', 'comment', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'comment', type_='unique')
    op.drop_column('comment', 'uuid')
    op.add_column('category', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('category_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.create_foreign_key('category_store_id_fkey', 'category', 'store', ['store_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'category', type_='unique')
    op.drop_column('category', 'uuid')
    op.drop_constraint(None, 'board_like', type_='foreignkey')
    op.drop_constraint(None, 'board_like', type_='foreignkey')
    op.create_foreign_key('board_like_users_id_fkey', 'board_like', 'users', ['users_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('board_like_board_id_fkey', 'board_like', 'board', ['board_id'], ['id'], ondelete='CASCADE')
    op.add_column('board', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('board_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'board', type_='foreignkey')
    op.drop_constraint(None, 'board', type_='foreignkey')
    op.create_foreign_key('board_store_id_fkey', 'board', 'store', ['store_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('board_user_id_fkey', 'board', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'board', type_='unique')
    op.drop_column('board', 'uuid')
    # ### end Alembic commands ###
